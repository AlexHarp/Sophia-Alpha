{# neptune_sync/templates/my-template.html.twig #}
{{ attach_library('neptune_sync/echart') }}

{# below form element creates a back button on all graph pages#}
<div class="row">
    <div class="col-md-6">
        <form>
            <input type="button" class="graph_back_btn" value="Back to entity page" onclick="history.back()">
        </form>
</div>
<div class="col-md-6 shapes-legend">
    <p>Shapes |  
    <i class="far fa-circle"></i> - Commonwealth body, 
    <i class="far fa-triangle"></i> - Outcome,
    <i class="far fa-square"></i> - Program
</p>
</div>
</div>
<div id="maingraph"></div>
<script type="text/javascript">
    // based on prepared DOM, initialize echarts instance
    var myChart = echarts.init(document.getElementById('maingraph'));

    myChart.showLoading();

    (function() {
        myChart.hideLoading();
        var json = JSON.parse('{{ graph_json }}'.replace(/&quot;/g,'"'));
        //var categories = ['rdfs:label','owl:NamedIndividual','owl:Class','misc'];
        myChart.setOption(option = {
            title: {
                formatter: [
                    '{title} <br/>',

                ].join('\n'),
                text: "{{ graph_name }}",
                top: '10',
                left: '10',
                color: '#000',
                backgroundColor: '#fff',
            },
            backgroundColor: '#000',
            animationDurationUpdate: 1500,
            animationEasingUpdate: 'quinticInOut',
            tooltip: {
                confine: true,
            },
            legend: [{
                // selectedMode: 'single',
                data: json.category.map(function (a) {
                    return a.name;
                }),
                top: '40',
                left: '10',
                backgroundColor: '#fff',
            }],
            nodeScaleRatio: 0.8,
            
            series : [
                {
                    type: 'graph',
                    layout: 'force',
                    zoom: 2,
                    edgeSymbol: ['circle', 'arrow'],
                    edgeSymbolSize: [4, 10],
                    // progressiveThreshold: 700,
                    data: json.nodes.map(function (node) {
                        return {
                            //itemStyle: null,
                            x: null,
                            y: null,
                            id: node.id,
                            name: node.label,
                            symbol: node.shape,
                            symbolSize: node.symbolSize,
                            draggable: true,
                            tooltip: node.value,
                            category: node.category,
                            label: {
                                show: true,
                                position: 'inside',
                            },
                        };
                    }),
                    edges: json.edges.map(function (edge) {
                        return {
                            source: edge.sourceID,
                            target: edge.targetID,
                            value: edge.label,
                            emphasis: {
                                label: {
                                    show: true,
                                    position: 'insideTopLeft',
                                    color: '#cc99ff',
                                    fontSize: 16,
                                    formatter: '{c}', //uses value for label
                                    width: 100,
                                },
                                lineStyle: {
                                    color: "#00b300",
                                    width: 10,
                                    type: 'dashed',
                                },
                            },
                        };
                    }),
                    
                    roam: true,
                    categories: json.category,
                    focusNodeAdjacency: true,
                    lineStyle: {
                        width: 1,
                        curveness: 0,
                        opacity: 0.7
                    },
                    
                }
            ]
        }, true);
    })();
</script>
